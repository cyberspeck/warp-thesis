
idxSlice = 200
ph2_CT = Volume(path="../data/phantom2/CT_x1", method="CT", resample=1, ref=idxSlice)
ph2_CT_x4 = Volume(path="../data/phantom2/CT_x4", method="CT", resample=4, ref=idxSlice)
ph2_CT_x9 = Volume(path="../data/phantom2/CT_x9", method="CT", resample=9, ref=idxSlice)
ph2_CT_x25 = Volume(path="../data/phantom2/CT_x25", method="CT", resample=25, ref=idxSlice)
ph2_CT_x100 = Volume(path="../data/phantom2/CT_x100", method="CT", resample=100, ref=idxSlice)

ph2_MR = Volume(path="../data/phantom2/MR_x1", method="MR", resample=1, ref=idxSlice)
ph2_MR_x4 = Volume(path="../data/phantom2/MR_x4", method="MR", resample=4, ref=idxSlice)
ph2_MR_x9 = Volume(path="../data/phantom2/MR_x9", method="MR", resample=9, ref=idxSlice)
ph2_MR_x25 = Volume(path="../data/phantom2/MR_x25", method="MR", resample=25, ref=idxSlice)
ph2_MR_x100 = Volume(path="../data/phantom2/MR_x100", method="MR", resample=100, ref=idxSlice)

vol_list = [[ph2_CT, ph2_CT_x4, ph2_CT_x9, ph2_CT_x25, ph2_CT_x100],[ph2_MR, ph2_MR_x4, ph2_MR_x9, ph2_MR_x25, ph2_MR_x100]]
modality, sets = np.shape(vol_list)

length = ph2_CT.zSize
spacing = ph2_CT.zSpace
sliceNumbers = np.arange(length, dtype=int)

# for data centered around iso-centre, this is real x-axis:
iso = 183
dist = ( (sliceNumbers - iso ) ).round(2)


warp_simple = np.zeros((sets, length, 2))
warp_iter = np.zeros((sets, length, 2))
warpMagnitude_simple = np.zeros((sets, length, 1))
warpMagnitude_iter = np.zeros((sets, length, 1))
lows_CT = np.zeros((sets, 2))
radii_CT = np.zeros((sets, 2))
lows_MR = np.zeros((sets, 4))
radii_MR = np.zeros((sets, 4))

# 2 DC for CT, 3 DC for MR (2 using MR.centroid, 1 using CT.centroid!)
DC_CT = np.zeros((sets, length, 2))
DC_CT_average = np.zeros((sets, 2))
DC_MR = np.zeros((sets, length, 4))
DC_MR_average = np.zeros((sets, 4))

fig = plt.figure()
plt.ylim(ymin=0.2, ymax=1)
#plt.xlim(xmin=(3.5-.1), xmax=(5.5+.1))
plt.xlim(xmin=(1.5-.1), xmax=(4.5+.1))
plt.ylabel(u"DC")
plt.xlabel(u"radius [mm]")

for i in range(sets): 
#    vol_list[0][i].getCentroid()
#    CT_DC_simple = vol_list[0][i].getDice(plot=True)
#    CT_DC_simple_average = vol_list[0][i].diceAverage
#    CT_lower_simple = vol_list[0][i].lower
#    CT_radius_simple = vol_list[0][i].bestRadius
    
    vol_list[1][i].getCentroid()
    MR_DC_simple = vol_list[1][i].getDice(plot=True)
    MR_DC_simple_average = vol_list[1][i].diceAverage


plt.legend(('x1','x4','x9','x16','x100'), loc='upper right')
